<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2014r2.1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="1939673543">
 <ObjName>Option</ObjName>
 <ObjContainerID>1881215597</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(shortKey As String, longKey As String, description As String, type As OptionType = OptionType.String)</SourceLine>
   <SourceLine>// Validate and cleanup</SourceLine>
   <SourceLine>shortKey = shortKey.Trim</SourceLine>
   <SourceLine>longKey = longKey.Trim</SourceLine>
   <SourceLine>description = ReplaceLineEndings(description.Trim, EndOfLine)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>While shortKey.Left(1) = "-"</SourceLine>
   <SourceLine>shortKey = shortKey.Mid(2).Trim</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine>While longKey.Left(1) = "-"</SourceLine>
   <SourceLine>longKey = longKey.Mid(2).Trim</SourceLine>
   <SourceLine>Wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If shortKey = "" and longKey = "" Then</SourceLine>
   <SourceLine>Raise New OptionParserException("Option must specify at least one key.")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If shortKey.Len &gt; 1 Then</SourceLine>
   <SourceLine>Raise New OptionParserException("Short Key is optional but may only be one character: " + shortKey)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>If longKey.Len = 1 Then</SourceLine>
   <SourceLine>Raise New OptionParserException("Long Key is optional but must be more than one character: " + longKey)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Self.ShortKey = shortKey</SourceLine>
   <SourceLine>Self.LongKey = longKey</SourceLine>
   <SourceLine>Self.Description = description</SourceLine>
   <SourceLine>Self.Type = type</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>shortKey As String, longKey As String, description As String, type As OptionType = OptionType.String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetRelativeFolderItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetRelativeFolderItem(path As String, relativeTo As FolderItem = Nil) As FolderItem</SourceLine>
   <SourceLine>Dim prefix As String = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#If TargetWin32 Then</SourceLine>
   <SourceLine>Const pathSep = "\"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Maybe what is passed isn't actually a relative path</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If path.Mid(2, 1) = ":" Then</SourceLine>
   <SourceLine>Return GetFolderItem(path, FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If path.Left(1) = pathSep Then</SourceLine>
   <SourceLine>relativeTo = GetFolderItem(SpecialFolder.CurrentWorkingDirectory.NativePath.Left(3))</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#Else</SourceLine>
   <SourceLine>Const pathSep = "/"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Maybe what is passed isn't actually a relative path</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If path.Left(1) = pathSep Then</SourceLine>
   <SourceLine>Return GetFolderItem(path, FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>prefix = pathSep</SourceLine>
   <SourceLine>#EndIf</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// OK, seems to be a relative path</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If relativeTo = Nil Then</SourceLine>
   <SourceLine>relativeTo = SpecialFolder.CurrentWorkingDirectory</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>path = relativeTo.NativePath + pathSep + path</SourceLine>
   <SourceLine>Dim newParts() As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim pathParts() As String = path.Split(pathSep)</SourceLine>
   <SourceLine>For i As Integer = 0 to pathParts.Ubound</SourceLine>
   <SourceLine>Dim p As String = pathParts(i)</SourceLine>
   <SourceLine>If p = "" Then</SourceLine>
   <SourceLine>// Can happen on Windows since it appends a pathSep onto the end of NativePath</SourceLine>
   <SourceLine>// if relativeTo is a folder.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf p = "." Then</SourceLine>
   <SourceLine>// Skip this path component</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ElseIf p = ".." Then</SourceLine>
   <SourceLine>// Remove the last path component from newParts</SourceLine>
   <SourceLine>If newParts.Ubound &gt; -1 Then</SourceLine>
   <SourceLine>newParts.Remove newParts.Ubound</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>// Nothing special about this path component</SourceLine>
   <SourceLine>newParts.Append p</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>path = prefix + Join(newParts, pathSep)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return GetFolderItem(path, FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>path As String, relativeTo As FolderItem = Nil</ItemParams>
  <ItemResult>FolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>HandleValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub HandleValue(value As String)</SourceLine>
   <SourceLine>Dim newValue As Variant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Select Case Type</SourceLine>
   <SourceLine>Case OptionType.Boolean</SourceLine>
   <SourceLine>Select Case value</SourceLine>
   <SourceLine>Case "", "y", "yes", "t", "true", "on", "1"</SourceLine>
   <SourceLine>newValue = True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>newValue = False</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Date</SourceLine>
   <SourceLine>Dim dValue As Date</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If ParseDate(value, dValue) Then</SourceLine>
   <SourceLine>newValue = dValue</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>newValue = value</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Directory</SourceLine>
   <SourceLine>newValue = GetRelativeFolderItem(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Double</SourceLine>
   <SourceLine>newValue = Val(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.File</SourceLine>
   <SourceLine>newValue = GetRelativeFolderItem(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Integer</SourceLine>
   <SourceLine>newValue = Val(value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.String</SourceLine>
   <SourceLine>newValue = value</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Self.IsArray Then</SourceLine>
   <SourceLine>If Not Self.WasSet Then</SourceLine>
   <SourceLine>Self.Value = Array(newValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Dim ary() As Variant = Self.Value</SourceLine>
   <SourceLine>ary.Append newValue</SourceLine>
   <SourceLine>Self.Value = ary</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Self.Value = newValue</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Self.WasSet = True</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>value As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Description</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Description As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Description As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsArray As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsArray As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsReadableRequired</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsReadableRequired As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsReadableRequired As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsRequired</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsRequired As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsRequired As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsValid</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsValid As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsValid As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>If IsRequired And Not WasSet Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If IsRequired Or WasSet Then</SourceLine>
   <SourceLine>Select Case Type</SourceLine>
   <SourceLine>Case OptionType.Date</SourceLine>
   <SourceLine>If IsValidDateRequired Then</SourceLine>
   <SourceLine>Dim d As Date = Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If d Is Nil Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Directory, OptionType.File</SourceLine>
   <SourceLine>Dim fi As FolderItem = Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If IsRequired Or WasSet Then</SourceLine>
   <SourceLine>If IsReadableRequired And (fi Is Nil Or fi.IsReadable = False) Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If IsWriteableRequired And (fi Is Nil Or fi.IsWriteable = False) Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Double, OptionType.Integer</SourceLine>
   <SourceLine>Dim d As Double = Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If MinimumNumber &lt;&gt; kNumberNotSet And d &lt; MinimumNumber Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If MaximumNumber &lt;&gt; kNumberNotSet And d &gt; MaximumNumber Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>IsValidDateRequired</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsValidDateRequired As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsValidDateRequired As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsWriteableRequired</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsWriteableRequired As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsWriteableRequired As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>LongKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>LongKey As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>LongKey As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MaximumNumber</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MaximumNumber As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MaximumNumber As Double = kNumberNotSet</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>MinimumNumber</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>MinimumNumber As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>MinimumNumber As Double = kNumberNotSet</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ShortKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ShortKey As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ShortKey As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Type</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Type As OptionType</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Type As OptionType</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>TypeString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>TypeString As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>TypeString As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>Select Case Type</SourceLine>
   <SourceLine>Case OptionType.Boolean</SourceLine>
   <SourceLine>Return "BOOL"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Date</SourceLine>
   <SourceLine>Return "DATE"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Directory</SourceLine>
   <SourceLine>Return "DIR"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Double</SourceLine>
   <SourceLine>Return "DOUBLE"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.File</SourceLine>
   <SourceLine>Return "FILE"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.Integer</SourceLine>
   <SourceLine>Return "INTEGER"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Case OptionType.String</SourceLine>
   <SourceLine>Return "STR"</SourceLine>
   <SourceLine>End Select</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Value</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Value As Variant</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Value As Variant</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>WasSet</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>WasSet As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>WasSet As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Description</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsReadableRequired</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsRequired</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsValid</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsValidDateRequired</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsWriteableRequired</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LongKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximumNumber</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>kNumberNotSet</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimumNumber</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>kNumberNotSet</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ShortKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TypeString</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>WasSet</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsArray</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kNone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kNone</ItemName>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kNumberNotSet</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>kNumberNotSet</ItemName>
  <ItemType>2</ItemType>
  <ItemDef>-32768</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>OptionType</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemType>Integer</ItemType>
  <ItemName>OptionType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>String</SourceLine>
   <SourceLine>Integer</SourceLine>
   <SourceLine>Double</SourceLine>
   <SourceLine>Date</SourceLine>
   <SourceLine>Boolean</SourceLine>
   <SourceLine>File</SourceLine>
   <SourceLine>Directory</SourceLine>
  </ItemSource>
 </Enumeration>
</block>
</RBProject>
